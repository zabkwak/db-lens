services:
    postgres:
        image: postgres:16-alpine
        container_name: postgres
        ports:
            - '5432:5432'
        command: postgres -c 'max_connections=1000'
        environment:
            - POSTGRES_USER=db-lens
            - POSTGRES_PASSWORD=test
            - POSTGRES_DB=postgres
            - PGPORT=5432
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 5s
            timeout: 3s
            retries: 5
            start_period: 5s
        volumes:
            - ./db/init.postgre.sql:/docker-entrypoint-initdb.d/init.sql
    mysql:
        image: mysql:8.0
        container_name: mysql
        ports:
            - '3306:3306'
        environment:
            - MYSQL_ROOT_PASSWORD=test
            - MYSQL_DATABASE=db_lens
            - MYSQL_USER=db-lens
            - MYSQL_PASSWORD=test
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-ptest']
            interval: 5s
            timeout: 3s
            retries: 5
            start_period: 5s
        volumes:
            - ./db/init.mysql.sql:/docker-entrypoint-initdb.d/init.sql
    ssh_server:
        image: linuxserver/openssh-server:latest
        container_name: ssh_server
        hostname: ssh_server
        environment:
            - DOCKER_MODS=linuxserver/mods:openssh-server-ssh-tunnel
            - PUID=1000
            - PGID=1000
            - TZ=UTC
            - USER_NAME=testuser
            - PUBLIC_KEY_FILE=/config/ssh_key.pub
        ports:
            - '2222:2222'
        restart: unless-stopped
        volumes:
            - ./ssh_key.pub:/config/ssh_key.pub
        healthcheck:
            test: ['CMD', 'nc', '-z', 'localhost', '2222']
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 10s
